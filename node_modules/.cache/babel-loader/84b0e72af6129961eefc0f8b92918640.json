{"ast":null,"code":"var _jsxFileName = \"/home/monero/Desktop/litecnc/src/components/more.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { render } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OffCanvasExample(_ref) {\n  _s();\n\n  let {\n    name,\n    ...props\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Offcanvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OffCanvasExample, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = OffCanvasExample;\n\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ['bottom'].map((placement, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n      placement: placement,\n      name: placement\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c2 = Example;\nrender( /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 8\n}, this));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OffCanvasExample\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"names":["React","useState","Button","Offcanvas","render","OffCanvasExample","name","props","show","setShow","handleClose","handleShow","Example","map","placement","idx"],"sources":["/home/monero/Desktop/litecnc/src/components/more.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport {render} from 'react'\nfunction OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {['bottom'].map((placement, idx) => (\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\n      ))}\n    </>\n  );\n}\n\nrender(<Example />);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAAQC,MAAR,QAAqB,OAArB;;;;AACA,SAASC,gBAAT,OAA8C;EAAA;;EAAA,IAApB;IAAEC,IAAF;IAAQ,GAAGC;EAAX,CAAoB;EAC5C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMS,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;EACA,MAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,SAAhB;MAA0B,OAAO,EAAEE,UAAnC;MAA+C,SAAS,EAAC,MAAzD;MAAA,UACGL;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,SAAD;MAAW,IAAI,EAAEE,IAAjB;MAAuB,MAAM,EAAEE,WAA/B;MAAA,GAAgDH,KAAhD;MAAA,wBACE,QAAC,SAAD,CAAW,MAAX;QAAkB,WAAW,MAA7B;QAAA,uBACE,QAAC,SAAD,CAAW,KAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,SAAD,CAAW,IAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAgBD;;GAtBQF,gB;;KAAAA,gB;;AAwBT,SAASO,OAAT,GAAmB;EACjB,oBACE;IAAA,UACG,CAAC,QAAD,EAAWC,GAAX,CAAe,CAACC,SAAD,EAAYC,GAAZ,kBACd,QAAC,gBAAD;MAA4B,SAAS,EAAED,SAAvC;MAAkD,IAAI,EAAEA;IAAxD,GAAuBC,GAAvB;MAAA;MAAA;MAAA;IAAA,QADD;EADH,iBADF;AAOD;;MARQH,O;AAUTR,MAAM,eAAC,QAAC,OAAD;EAAA;EAAA;EAAA;AAAA,QAAD,CAAN"},"metadata":{},"sourceType":"module"}